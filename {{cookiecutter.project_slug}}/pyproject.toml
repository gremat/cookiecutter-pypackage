[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
authors = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"},
]
maintainers = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"},
]
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = {text = "{{cookiecutter.open_source_license}}"}
dependencies = [
  "typer",
  "rich",
]

[project.optional-dependencies]
dev = [
    "pylint",  # linting
    "mypy",  # linting
    "pytest",  # testing
    "coverage",  # testing
    "pytest-cov",  # testing
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["py.typed"]

[project.scripts]
{{cookiecutter.project_slug}} = "{{cookiecutter.project_slug}}.{{cookiecutter.project_slug}}:app"

[tool.pylint.main]
source-roots = ["src"]
# Note: Replace with `pythonpath` for pylint >= 3.3.0
init-hook = "from pylint.config import find_default_config_files; import os, sys; sys.path.append(str(next(find_default_config_files()).parent / 'src'))"
# pythonpath = ["src"]

[tool.pylint.format]
# Maximum number of characters on a single line.
max-line-length = 88 # See Black

[tool.pylint."messages control"]
# disable = ["missing-docstring"]

[tool.pylint.miscellaneous]
# List of note tags to take in consideration, separated by a comma.
# Note: We use "FIXME" as a reminder for later that should _not_ block a PR.
notes = ["XXX", "TODO"]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
# line-length = 79  # PEP8
# line-length = 88  # Black default
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.venv
  | dist
)/
'''

[tool.mypy]
# Target version. If not specified, defaults to the python interpreter
# version used to run mypy.
# python_version = "3.11"
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
check_untyped_defs = true
warn_unreachable = true
warn_no_return = true
warn_return_any = true

[tool.pytest.ini_options]
pythonpath = [
    "src",
]
testpaths = [
    "tests",
]
required_plugins = [
    "pytest-cov",
]
addopts = [
    "--cov",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
branch = true
relative_files = true
# Note: Drop trailing module name for multi-module project.
source = ["src/{{cookiecutter.project_slug}}"]
omit = [
    "tests/*",
]

[tool.coverage.report]
precision = 2
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",
    ]
